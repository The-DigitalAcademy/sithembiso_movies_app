{"ast":null,"code":"// import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n// import movieApi from \"../../../common/asps/movieApi\";\n// import { APIKey } from \"../../../common/asps/MovieApiKey\";\n// export   const fetchAsyncMovies = createAsyncThunk(\n//   \"movies/fetchAsyncMovies\",\n//   async (term) => {\n//     const response = await movieApi.get(\n//       `?apiKey=${APIKey}&s=${term}&type=movie`\n//     );\n//     return response.data;\n//   }\n// );\n// export const fetchAsyncShows = createAsyncThunk(\n//   \"movies/fetchAsyncShows\",\n//   async (term) => {\n//     const response = await movieApi.get(\n//       `?apiKey=${APIKey}&s=${term}&type=series`\n//     );\n//     return response.data;\n//   }\n// );\n// export const fetchAsyncMovieOrShowDetail = createAsyncThunk(\n//   \"movies/fetchAsyncMovieOrShowDetail\",\n//   async (id) => {\n//     const response = await movieApi.get(`?apiKey=${APIKey}&i=${id}&Plot=full`);\n//     return response.data;\n//   }\n// );\n// const initialState = {\n//   movies: {},\n//   shows: {},\n//   selectMovieOrShow: {},\n// };\n// const movieSlice = createSlice({\n//   name: \"movies\",\n//   initialState,\n//   reducers: {\n//     removeSelectedMovieOrShow: (state) => {\n//       state.selectMovieOrShow = {};\n//     },\n//   },\n//   extraReducers: {\n//     [fetchAsyncMovies.pending]: () => {\n//       console.log(\"Pending\");\n//     },\n//     [fetchAsyncMovies.fulfilled]: (state, { payload }) => {\n//       console.log(\"Fetched Successfully!\");\n//       return { ...state, movies: payload };\n//     },\n//     [fetchAsyncMovies.rejected]: () => {\n//       console.log(\"Rejected!\");\n//     },\n//     [fetchAsyncShows.fulfilled]: (state, { payload }) => {\n//       console.log(\"Fetched Successfully!\");\n//       return { ...state, shows: payload };\n//     },\n//     [fetchAsyncMovieOrShowDetail.fulfilled]: (state, { payload }) => {\n//       console.log(\"Fetched Successfully!\");\n//       return { ...state, selectMovieOrShow: payload };\n//     },\n//   },\n// });\n// export const { removeSelectedMovieOrShow } = movieSlice.actions;\n// export const getAllMovies = (state) => state.movies.movies;\n// export const getAllShows = (state) => state.movies.shows;\n// export const getSelectedMovieOrShow = (state) => state.movies.selectMovieOrShow;\n// export default movieSlice.reducer;","map":{"version":3,"names":[],"sources":["/Users/academy_learner/Desktop/sithembiso_movies_app/src/features/movies/movieSlice.js"],"sourcesContent":["// import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\n// import movieApi from \"../../../common/asps/movieApi\";\n// import { APIKey } from \"../../../common/asps/MovieApiKey\";\n\n\n// export   const fetchAsyncMovies = createAsyncThunk(\n//   \"movies/fetchAsyncMovies\",\n//   async (term) => {\n   \n//     const response = await movieApi.get(\n//       `?apiKey=${APIKey}&s=${term}&type=movie`\n//     );\n//     return response.data;\n//   }\n// );\n\n// export const fetchAsyncShows = createAsyncThunk(\n//   \"movies/fetchAsyncShows\",\n//   async (term) => {\n    \n//     const response = await movieApi.get(\n//       `?apiKey=${APIKey}&s=${term}&type=series`\n//     );\n//     return response.data;\n//   }\n// );\n\n// export const fetchAsyncMovieOrShowDetail = createAsyncThunk(\n//   \"movies/fetchAsyncMovieOrShowDetail\",\n//   async (id) => {\n//     const response = await movieApi.get(`?apiKey=${APIKey}&i=${id}&Plot=full`);\n//     return response.data;\n//   }\n// );\n\n// const initialState = {\n//   movies: {},\n//   shows: {},\n//   selectMovieOrShow: {},\n// };\n\n// const movieSlice = createSlice({\n//   name: \"movies\",\n//   initialState,\n//   reducers: {\n//     removeSelectedMovieOrShow: (state) => {\n//       state.selectMovieOrShow = {};\n//     },\n//   },\n//   extraReducers: {\n//     [fetchAsyncMovies.pending]: () => {\n//       console.log(\"Pending\");\n//     },\n//     [fetchAsyncMovies.fulfilled]: (state, { payload }) => {\n//       console.log(\"Fetched Successfully!\");\n//       return { ...state, movies: payload };\n//     },\n//     [fetchAsyncMovies.rejected]: () => {\n//       console.log(\"Rejected!\");\n//     },\n//     [fetchAsyncShows.fulfilled]: (state, { payload }) => {\n//       console.log(\"Fetched Successfully!\");\n//       return { ...state, shows: payload };\n//     },\n//     [fetchAsyncMovieOrShowDetail.fulfilled]: (state, { payload }) => {\n//       console.log(\"Fetched Successfully!\");\n//       return { ...state, selectMovieOrShow: payload };\n//     },\n//   },\n// });\n\n// export const { removeSelectedMovieOrShow } = movieSlice.actions;\n// export const getAllMovies = (state) => state.movies.movies;\n// export const getAllShows = (state) => state.movies.shows;\n// export const getSelectedMovieOrShow = (state) => state.movies.selectMovieOrShow;\n// export default movieSlice.reducer;"],"mappings":"AAAA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}